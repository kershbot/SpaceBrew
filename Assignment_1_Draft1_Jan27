/*
SpaceBrew Class 2014 
Parsons New School for Design
Kristen Kersh and Jackie Neon 
 * Button Example
 *
 *   Spacebrew library button example combined with shapes that send and receives boolean messages.  
 * 
 */
import spacebrew.*;

String server="sandbox.spacebrew.cc";
String name="Neon_KK_Button Example";
String description ="Client that sends and receives boolean messages. Background turns yellow when message received.";

Spacebrew sb;

color color_on = color(255, 255, 50);
color color_off = color(255, 255, 255);
int   currentColor = color_off; 

boolean button = false;

void setup() {
	frameRate(240);
	size(500, 400);

	// instantiate the spacebrewConnection variable
	sb = new Spacebrew( this );

	// declare your publishers
	sb.addPublish( "button_pressed", "boolean", true ); 


	// declare your subscribers
	sb.addSubscribe( "change_background", "boolean" );

	// connect to spacebre
	sb.connect(server, name, description );
}

void draw() {
	// set background color
	background( currentColor );

	// draw button
	fill(255,0,0);
	stroke(200,0,0);
	rectMode(CENTER);
	ellipse(width/2,height/2,250,250);

	// add text to button
	fill(230);
	//textAlign(CENTER);
	//textSize(24);
	if (mousePressed == true) {
	      fill(255,0,0); 
              ellipse (100,200,155,55);
              println("woot_woot");
	} if(mousePressed == false){
		 fill (255,0,0); 
                 rect (50,20,55,55);
                 println("hip_hip");
	}


    if(button){
      fill(255,0,0); 
      ellipse (100,200,155,55);
      println("woot_woot");
     //draw something 
    } else {
      fill (255,0,0); 
      rect (50,20,55,55);
      println("hip_hip");
      
      //draw something
      
    }

}

void mouseClicked(){
  
  {
  button = !button;
  }
}

void mousePressed() {
	// send message to spacebrew
	sb.send( "button_pressed", true);
}

void mouseReleased() {
	// send message to spacebrew
	sb.send( "button_pressed", false);
}

void onBooleanMessage( String name, boolean value ){
	println("got bool message " + name + " : " + value); 

	// update background color
	if (value == true) {
		currentColor = color_on;
                
                println("hazzzaaa"); 
	} else {
		currentColor = color_off;
	}
//update the shape on recive 
//if (value == true)  
}
